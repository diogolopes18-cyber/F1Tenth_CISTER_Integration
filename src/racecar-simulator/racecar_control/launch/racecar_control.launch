<?xml version='1.0'?>

<launch>
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!--rosparam file="$(find racecar_control)/config/racecar_control.yaml" command="load"/-->
 <!--arg name="car_name" default="car2"/-->


<!--=============================SPAWN CAR1==============================-->
<group ns="/car1">
  <rosparam file="$(find racecar_control)/config/racecar_control_copy.yaml" command="load" ns="/car1"/>
  <param name="/car1/robot_description" command="$(find xacro)/xacro '$(find racecar_description)/urdf/racecar.xacro'"/>

  <arg name="car_name" value="car1"/>

  <node name="racecar_spawn_car1" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model car1 -x -14.68 -y 11.37 -z -0.44 -Y -1.55"/>
  
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="--namespace=/car1 left_rear_wheel_velocity_controller_car1 right_rear_wheel_velocity_controller_car1
                                            left_front_wheel_velocity_controller_car1 right_front_wheel_velocity_controller_car1
                                            left_steering_hinge_position_controller_car1 right_steering_hinge_position_controller_car1
                                            joint_state_controller_car1"/>

  <node name="robot_state_publisher_car1" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/racecar/joint_states"/>
  </node>

  <arg name="vesc_remap1" value='vesc1'/>

  <node pkg="racecar_control" type="servo_commands.py" name="servo_commands_car1" output="screen">
    <remap from="/car1/ackermann_cmd_mux/output" to="/$(arg vesc_remap1)/low_level/ackermann_cmd_mux/output"/>
  </node>

 <node name="better_odom" pkg="topic_tools" type="relay" args="/vesc1/odom /pf/pose/odom"/>

  <!--node name="message_to_tf_$(arg car_name)" pkg="race" type="message_to_tf_gen.py" args='$(arg car_name)'/-->

  <node pkg="racecar_gazebo" name="gazebo_odometry_$(arg car_name)" type="gazebo_odometry.py" args="$(arg car_name)" output="screen"/>

</group>

<!--====================SPAWN CAR2=====================-->

<group ns="/car2">
  <rosparam file="$(find racecar_control)/config/car2.yaml" command="load" ns="/car2"/>
  <param name="/car2/robot_description" command="$(find xacro)/xacro '$(find racecar_description)/urdf/racecar_2.xacro'"/>

  <arg name="car_name2" value="car2"/>

  <node name="racecar_spawn_car2" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model car2 -x -14.70 -y 14.22 -z -0.44 -Y -1.55"/>
  
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="--namespace=/car2 left_rear_wheel_velocity_controller_car2 right_rear_wheel_velocity_controller_car2
                                            left_front_wheel_velocity_controller_car2 right_front_wheel_velocity_controller_car2
                                            left_steering_hinge_position_controller_car2 right_steering_hinge_position_controller_car2
                                            joint_state_controller_car2"/>

  <node name="robot_state_publisher_car2" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/racecar/joint_states"/>
  </node>

  <arg name="vesc_remap2" value='vesc2'/>

  <node pkg="racecar_control" type="servo_commands.py" name="servo_commands_car2" output="screen">
    <remap from="/car2/ackermann_cmd_mux/output" to="/$(arg vesc_remap2)/low_level/ackermann_cmd_mux/output"/>
  </node>

 <node name="better_odom_car2" pkg="topic_tools" type="relay" args="/vesc2/odom /pf/pose/odom"/>

  <!--node pkg="race" name="platooning_leader" type="platooning.py" output="screen"/-->

  <!--node name="message_to_tf_$(arg car_name2)" pkg="race" type="message_to_tf_gen.py" args='$(arg car_name2)'/-->

  <node pkg="racecar_gazebo" name="gazebo_odometry_$(arg car_name2)" type="gazebo_odometry.py" args="$(arg car_name2)" output="screen"/>
</group>

<!--==================================SPAWN CAR3=========================================-->

<!--group ns="/car3">
  <rosparam file="$(find racecar_control)/config/racecar_control_copy.yaml" command="load" ns="/car3"/>
  <param name="/car3/robot_description" command="$(find xacro)/xacro '$(find racecar_description)/urdf/racecar.xacro'"/>

  <node name="racecar_spawn_car3" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model car3 -x -5.95 -y 3.51 -z 0.05"/>
  
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="namespace=/car3 left_rear_wheel_velocity_controller_car2 right_rear_wheel_velocity_controller_car2
                                            left_front_wheel_velocity_controller_car2 right_front_wheel_velocity_controller_car2
                                            left_steering_hinge_position_controller_car2 right_steering_hinge_position_controller_car2
                                            joint_state_controller_car2"/>

  <node name="robot_state_publisher_car3" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/racecar/joint_states"/>
  </node>

  <node pkg="racecar_control" type="servo_commands.py" name="servo_commands_car3" output="screen">
    <remap from="/car3/ackermann_cmd_mux/output" to="/vesc/low_level/ackermann_cmd_mux/output"/>
  </node>
</group-->

  <!--node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/racecar" args="left_rear_wheel_velocity_controller right_rear_wheel_velocity_controller
                                            left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                            left_steering_hinge_position_controller right_steering_hinge_position_controller
                                            joint_state_controller"/-->
 
  <!--rosparam file="$(find racecar_control)/config/racecar_control.yaml" command="load"/-->

  <!--node name="controller_manager_car1" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/racecar" args="left_rear_wheel_velocity_controller right_rear_wheel_velocity_controller
                                            left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                            left_steering_hinge_position_controller right_steering_hinge_position_controller
                                            joint_state_controller"/-->
  
  <!-- convert joint states to TF transforms for rviz, etc -->
  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/racecar/joint_states"/>
  </node-->

  <!--node name="robot_state_publisher_car2" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/racecar/joint_states"/>
  </node-->


<!--		CAR TEST		-->
<!--node name="robot_state_publisher_car1" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/car1/joint_states"/>
</node-->

  <!--node name="robot_state_publisher_car2" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/car2/joint_states"/>
  </node>

  <node name="robot_state_publisher_car3" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/car3/joint_states"/>
  </node-->
 
  <!-- servo node -->
  <!--node pkg="racecar_control" type="servo_commands.py" name="servo_commands" output="screen">
    <remap from="/racecar/ackermann_cmd_mux/output" to="/vesc/low_level/ackermann_cmd_mux/output"/>
  </node-->

  <!--node pkg="racecar_control" type="servo_commands.py" name="servo_commands_car2" output="screen">
    <remap from="/car2/ackermann_cmd_mux/output" to="/vesc/low_level/ackermann_cmd_mux/output"/>
  </node-->

  <!--node pkg="racecar_control" type="servo_commands.py" name="servo_commands" output="screen">
    <remap from="/racecar/ackermann_cmd_mux/output" to="/vesc/low_level/ackermann_cmd_mux/output/teste"/>
  </node-->

  <!-- Allow for Gazebo to broadcast odom -->

  <!--node pkg="racecar_gazebo" name="gazebo_odometry_node" type="gazebo_odometry.py"/-->


</launch>
